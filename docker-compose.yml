version: '3.7'

networks:
  proxy:
    external: true
  internal:
    driver: bridge

services:

  whoami:
    container_name: whoami
    image: containous/whoami
    restart: unless-stopped
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.entrypoints=https
      - traefik.http.routers.whoami.rule=Host(`whoami.$DOMAINNAME`)
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.middlewares=chain-all-auth

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    networks:
      - internal
    environment:
      - TZ=$TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik:
    container_name: traefik
    image: traefik
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - internal
      - proxy
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=$TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/rules:/rules
      - ./traefik/traefik.yml:/traefik.yml
      - $SHARED:/shared
      - $CONFIG_PATH/traefik/traefik.log:/traefik.log
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      # HTTP-to-HTTPS
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      # HTTP Routers
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.domains[0].main=$DOMAINNAME
      - traefik.http.routers.traefik.tls.domains[0].sans=*.$DOMAINNAME
      ## Services - API
      - traefik.http.routers.traefik.service=api@internal
      ## Middlewares
#      - traefik.http.middlewares.auth.forwardauth.address=http://viens.ml/api/?v2/auth&group=1
#      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.middlewares.secure-headers-frame-options.headers.customFrameOptionsValue="allow-from https:$DOMAINNAME"
      - traefik.http.middlewares.chain-all.chain.middlewares=chain-auth@file,secure-headers-frame-options
      - traefik.http.routers.traefik.middlewares=chain-all

  organizr:
    container_name: organizr
    image: organizrtools/organizr-v2
    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - internal
      - proxy
    environment:
      - TZ=$TZ
    ports:
    - 8085:8085
    volumes:
      - $CONFIG_PATH/organizr/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.organizr.entrypoints=https
      - traefik.http.routers.organizr.rule=Host(`$DOMAINNAME`,`www.$DOMAINNAME`)
      - traefik.http.routers.organizr.tls=true
      - traefik.http.routers.organizr.middlewares=chain-all

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    restart: unless-stopped
    depends_on:
      - traefik
      - organizr
    networks:
      - internal
      - proxy
    environment:
      - TZ=$TZ
    volumes:
      - $CONFIG_PATH/jellyfin/config:/config
      - $CONFIG_PATH/jellyfin/cache:/cache
      - $MEDIA:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=https
      - traefik.http.routers.jellyfin.rule=Host(`jf.$DOMAINNAME`)
      - traefik.http.routers.jellyfin.tls=true
#      - traefik.http.routers.jellyfin.middlewares=auth
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096

  qbittorent:
    container_name: qbittorrent
    image: linuxserver/qbittorrent
    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - internal
      - proxy
    environment:
      - TZ=$TZ
    volumes:
      - $CONFIG_PATH/qbittorrent/config:/config
      - $DOWNLOADS:/downloads
    ports:
      - 6881:6881
      - 6881:6881/udp
    labels:
      - traefik.enable=true
      - traefik.http.routers.torrent.entrypoints=https
      - traefik.http.routers.torrent.rule=Host(`qb.$DOMAINNAME`)
      - traefik.http.routers.torrent.tls=true
#      - traefik.http.routers.torrent.middlewares=auth
      - traefik.http.services.torrent.loadbalancer.server.port=8080

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - internal
      - proxy
    environment:
      - TZ=$TZ
    volumes:
      - $CONFIG_PATH/jackett/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.entrypoints=https
      - traefik.http.routers.jackett.rule=Host(`jk.$DOMAINNAME`)
      - traefik.http.routers.jackett.tls=true
